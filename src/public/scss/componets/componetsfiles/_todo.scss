.todo-user-color {
	color: rgba($color-withe, 0.5) !important;

	& i {
		font-size: 1.5rem;
	}

	&:hover {
		color: $color-withe !important;
		cursor: pointer !important;
	}
}

%borderoutline0 {
	outline: 0;
	border: 0;
}

.btn-addlist {
	border: 0;
	background-color: transparent;

	&:hover {
		background-color: transparent;
		@extend %borderoutline0;
	}

	&:focus {
		background-color: transparent !important;
		box-shadow: none;

		@extend %borderoutline0;
	}

	&:active {
		background-color: transparent !important;
		box-shadow: none;
		@extend %borderoutline0;
	}

	&:not(:disabled):not(.disabled):active:focus {
		box-shadow: none;
	}

	& i {
		color: $bg-color;
		font-size: 1.5rem;

		&:hover {
			opacity: 0.7;
		}
	}
}

/// %formcontrol
%formcontrol {
	border: 1px solid $bg-color;
	background-color: $color-withe;
	color: $bg-color;

	&::placeholder {
		color: $bg-color;
		opacity: 0.6;
	}

	&:focus {
		border-color: $bg-color;
		box-shadow: 4px 6px 5px 0 $form-focus-shadow-color;
	}
}

.modal-todo-container {
	& .modal-content {
		border: 2px solid $border-color;
		background-color: lighten($bg-color, 5%);
	}

	& .modal-header {
		border: 0;

		@include padding(0.5rem 1rem);

		& .close {
			& span {
				color: $color-withe;
				font-size: 2rem;
			}
		}
	}

	& .modal-title {
		color: $color-withe;
	}

	& .modal-body {
		padding: 0 1rem;
		border: 0;
	}

	& .modal-footer {
		padding: 0.5rem 1rem;
		border: 0;

		& i {
			color: $color-withe;
		}
	}

	& .form-control {
		@extend %formcontrol;
	}
}

.modal {
	animation-name: modalFade;
	animation-duration: 0.3s;
}

@keyframes modalFade {
	from {
		opacity: 0;
		transform: translateY(-50%);
	}

	to {
		opacity: 1;
		transform: translateY(0);
	}
}

.todo {
	background-color: $bg-color;

	& .card {
		background-color: $bg-color-card;

		&:last-of-type {
			border: 1px solid $border-color !important;
			border-radius: 0.5rem !important;
		}

		& .card-header {
			padding: 0.5rem;
			background-color: $bg-color-card;
		}

		& .collapse {
			background-color: $bg-color-card;
		}

		& .collapsing {
			transition: height 400ms cubic-bezier(0.4, 0, 0.2, 1);
		}

		& .card-body {
			background-color: $bg-color-card-body;

			@include padding(1rem);
		}

		& button {
			border: 0;
			background-color: transparent;

			&:hover {
				background-color: transparent;

				@extend %borderoutline0;
			}

			&:focus {
				background-color: transparent !important;
				box-shadow: none;

				@extend %borderoutline0;
			}

			&:active {
				background-color: transparent !important;
				box-shadow: none;

				@extend %borderoutline0;
			}

			&:not(:disabled):not(.disabled):active:focus {
				box-shadow: none;
			}

			& i {
				font-size: 1.5rem;
			}
		}
	}
}

.todo-item-list {
	& .list-index {
		width: 30px;
		height: 30px;
		border-radius: 100px;
		background-color: lighten($bg-color, 15%);
		color: $color-withe;
		text-align: center;
		font-weight: 500;
		line-height: 1.9rem;
	}

	& .description {
		font-size: 14px;
	}

	& .listname {
		font-weight: 600;
	}

	& .progress {
		background-color: $bg-color;

		& .progress-bar {
			background-color: $progress-bar-color-active;
		}
	}

	& .form-control {
		@extend %formcontrol;
	}
}

.todo-item-task {
	border: 1px solid $border-task-color !important;
	border-radius: 0.5rem;
	animation: fadein 2s;

	@include trasition-opacity(0.5s);

	@include padding(8px);
	@include margin(2px null);

	& span {
		font-size: 14px;
	}

	& .taskname {
		font-weight: 500;
	}

	& .form-control {
		transition: height 400ms cubic-bezier(0.4, 0, 0.2, 1);

		@extend %formcontrol;
	}
}

@keyframes fadein {
	from {
		opacity: 0;
	}

	to {
		opacity: 1;
	}
}

.fadeout {
	animation: fadeout 2s;
}

@keyframes fadeout {
	from {
		opacity: 1;
	}

	to {
		opacity: 0;
	}
}

.task-form {
	@include transition-all(0.3s);

	&.open {
		padding: 25px 0;
		height: auto;
	}

	&.closed {
		overflow: hidden;
		height: 0;
	}

	& .form-control {
		@extend %formcontrol;
	}
}
.removeicon-color {
	color: $remove-icon-task-color !important;
}

.removeicon {
	cursor: pointer;

	&:hover {
		color: $remove-icon-color-hover !important;
	}

	&.x2 {
		font-size: 1.2rem;
	}
}

.remove-item {
	cursor: pointer;

	&:hover {
		color: $remove-icon-color-hover !important;
	}
}

.icon-addtask {
	cursor: pointer;

	&:hover {
		opacity: 0.7;
	}

	&[type="submit"] {
		-webkit-appearance: none;
	}

	&.x2 {
		font-size: 1.5rem;
	}
}

.icon-submittask {
	cursor: pointer;

	&:hover {
		opacity: 0.7;
	}
}

.icon-rotate {
	transition: transform 500ms ease-in-out;

	&.rotate {
		transform: rotate(90deg);
	}
}

.img-icon-todo {
	padding: 10px;
	max-width: 50px;
}

//react-logo
$react-logo-border-color: #00d8ff !default;

%react-logo-dflex {
	display: flex;
	align-items: center;
	justify-content: center;
}

.container-react-logo {
	margin: 20px auto 0;
	width: 250px;
	height: 250px;
	background: $bg-color;

	@extend %react-logo-dflex;
}

%react-logo-after-before {
	position: absolute;
	display: inline-block;
	width: 200px;
	height: 70px;
	border: 10px solid $react-logo-border-color;
	border-radius: 50%;
}

.react-logo {
	display: flex;
	align-items: center;
	justify-content: center;
	border: 10px solid $react-logo-border-color;
	border-radius: 50%;
	animation-name: rotate;
	animation-duration: 5s;
	animation-timing-function: linear;
	animation-iteration-count: infinite;

	@extend %react-logo-after-before;

	&:before {
		content: "";
		transform: rotate(57deg);

		@extend %react-logo-after-before;

		@extend %react-logo-dflex;
	}

	&:after {
		content: "";
		transform: rotate(-57deg);

		@extend %react-logo-after-before;

		@extend %react-logo-dflex;
	}
}

.nucleo {
	width: 40px;
	height: 40px;
	border-radius: 100%;
	background: $react-logo-border-color;

	@extend %react-logo-dflex;
}

@keyframes rotate {
	100% {
		transform: rotate(360deg);
	}
}

.fade {
	&-enter {
		opacity: 0;
		transform: scale(1.1);

		&-active {
			opacity: 1;
			transform: scale(1);

			@include transition-all(0.5s);
		}
	}

	&-exit {
		opacity: 1;
		transform: scale(1);

		&-active {
			opacity: 0;
			transform: scale(0.5);

			@include transition-all(0.5s);
		}
	}

	&-leave {
		opacity: 1;
		transform: scale(1);

		&-active {
			opacity: 0;
			transform: scale(1.1);

			@include transition-all(0.5s);
		}
	}
}

// checkbox
$checkbox-size: 20px;
$checkbox-animation-ripple: 700ms;
$checkbox-animation-check: 0.3s;
$lightbg-text: rgba(0, 0, 0, 0.84);
$checked-colour: $color-withe;

.checkbox {
	display: inline-block;
	padding: 10px;
	transform: translateZ(0); // Force 3d rendering
	label {
		cursor: pointer;
		padding-left: 0; // Reset for Bootstrap rule
	}

	// Hide native checkbox
	input[type="checkbox"] {
		opacity: 0;
		position: absolute;
		margin: 0;
		z-index: -1;
		width: 0;
		height: 0;
		overflow: hidden;
		left: 0;
		pointer-events: none;
	}

	.checkbox-material {
		vertical-align: middle;
		position: relative;
		top: 3px;
		&:before {
			position: absolute;
			left: 8px;
			top: 2px;
			content: "";
			background-color: rgba($bg-color, 0.5);
			height: 4px;
			width: 4px;
			border-radius: 100%;
			z-index: 1;
			opacity: 0;
			margin: 0;
			transform: scale3d(2.3, 2.3, 1);
		}

		.check {
			position: relative;
			display: inline-block;
			width: $checkbox-size;
			height: $checkbox-size;
			border: 2px solid;
			border-radius: 2px;
			overflow: hidden;
			z-index: 1;
		}
		.check:before {
			position: absolute;
			content: "";
			transform: rotate(45deg);
			display: block;
			margin-top: -4px;
			margin-left: 6px;
			width: 0;
			height: 0;
			box-shadow: 0 0 0 0, 0 0 0 0, 0 0 0 0, 0 0 0 0, 0 0 0 0, 0 0 0 0, 0 0 0 0 inset;
			animation: checkbox-off $checkbox-animation-check forwards ease-out;
		}
	}

	input[type="checkbox"]:focus + .checkbox-material .check:after {
		opacity: 0.2;
	}
	input[type="checkbox"]:checked + .checkbox-material .check:before {
		box-shadow: 0 0 0 10px, 10px -10px 0 10px, 32px 0 0 20px, 0 32px 0 20px, -5px 5px 0 10px, 20px -12px 0 11px;
		animation: checkbox-on $checkbox-animation-check forwards ease-out;
	}

	input[type="checkbox"]:not(:checked) + .checkbox-material:before {
		animation: rippleOff $checkbox-animation-ripple forwards ease-out;
	}
	input[type="checkbox"]:checked + .checkbox-material:before {
		animation: rippleOn $checkbox-animation-ripple forwards ease-out;
	}

	// Ripple effect on click
	input[type="checkbox"]:not(:checked) + .checkbox-material .check:after {
		animation: rippleOff $checkbox-animation-ripple forwards ease-out;
	}
	input[type="checkbox"]:checked + .checkbox-material .check:after {
		animation: rippleOn $checkbox-animation-ripple forwards ease-out;
	}

	// Style for disabled inputs
	input[type="checkbox"][disabled]:not(:checked) ~ .checkbox-material .check:before,
	input[type="checkbox"][disabled] + .circle {
		opacity: 0.5;
	}
	input[type="checkbox"][disabled] + .checkbox-material .check:after {
		background-color: transparent;
		transform: rotate(-45deg);
	}
}

// Coloured alternate styles
.coloured {
	.checkbox-material {
		.check {
			color: $checked-colour;
		}
		&:before {
			background-color: $checked-colour;
		}
	}
	input[type="checkbox"]:checked + .checkbox-material {
		.check {
			color: $checked-colour;
		}
	}
}

// Animations
@keyframes checkbox-on {
	0% {
		box-shadow: 0 0 0 10px, 10px -10px 0 10px, 32px 0 0 20px, 0 32px 0 20px, -5px 5px 0 10px, 15px 2px 0 11px;
	}
	50% {
		box-shadow: 0 0 0 10px, 10px -10px 0 10px, 32px 0 0 20px, 0 32px 0 20px, -5px 5px 0 10px, 20px 2px 0 11px;
	}
	100% {
		box-shadow: 0 0 0 10px, 10px -10px 0 10px, 32px 0 0 20px, 0 32px 0 20px, -5px 5px 0 10px, 20px -12px 0 11px;
	}
}
@keyframes checkbox-off {
	0% {
		box-shadow: 0 0 0 10px, 10px -10px 0 10px, 32px 0 0 20px, 0 32px 0 20px, -5px 5px 0 10px, 20px -12px 0 11px, 0 0 0 0 inset;
	}

	25% {
		box-shadow: 0 0 0 10px, 10px -10px 0 10px, 32px 0 0 20px, 0 32px 0 20px, -5px 5px 0 10px, 20px -12px 0 11px, 0 0 0 0 inset;
	}
	50% {
		transform: rotate(45deg);
		margin-top: -4px;
		margin-left: 6px;
		width: 0;
		height: 0;
		box-shadow: 0 0 0 10px, 10px -10px 0 10px, 32px 0 0 20px, 0 32px 0 20px, -5px 5px 0 10px, 15px 2px 0 11px, 0 0 0 0 inset;
	}
	51% {
		transform: rotate(25deg);
		margin-top: -2px;
		margin-left: -2px;
		width: 20px;
		height: 20px;
		box-shadow: 0 0 0 0, 0 0 0 0, 0 0 0 0, 0 0 0 0, 0 0 0 0, 0 0 0 0, 0 0 0 10px inset;
	}
	100% {
		transform: rotate(0deg);
		margin-top: -2px;
		margin-left: -2px;
		width: 20px;
		height: 20px;
		box-shadow: 0 0 0 0, 0 0 0 0, 0 0 0 0, 0 0 0 0, 0 0 0 0, 0 0 0 0, 0 0 0 0 inset;
	}
}
@keyframes rippleOn {
	0% {
		opacity: 0.5;
	}
	100% {
		opacity: 0;
		transform: scale(13, 13);
	}
}
@keyframes rippleOff {
	0% {
		opacity: 0.5;
	}
	100% {
		opacity: 0;
		transform: scale(13, 13);
	}
}
